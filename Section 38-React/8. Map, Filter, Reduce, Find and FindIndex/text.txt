var numbers = [3, 56, 2, 48, 5];

Map -Create a new array by doing something with each item in an array.

function double(x) {
  return x * 2;
}
const newNumbers = numbers.map(double);

var newNumbers = [];
numbers.forEach(function (x) {
  newNumbers.push(x * 2);
});

const newNumbers = numbers.map(function (x) {
  return x * 2;
});

console.log(newNumbers);

0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
Filter - Create a new array by keeping the items that return true.

const newNumbers = numbers.filter(function(num) {
  return num < 10;
});

var newNumbers = [];
numbers.forEach(function(num) {
  if (num < 10) {
    newNumbers.push(num);
  }
})



0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

Reduce - Accumulate a value by doing something to each item in an array.

var newNumber = numbers.reduce(function (accumulator, currentNumber) {
  console.log("accumulator = " + accumulator);
  console.log("currentNumber = " + currentNumber);
    return accumulator + currentNumber;
})

var newNumber = 0;
numbers.forEach(function (currentNumber) {
  newNumber += currentNumber
})


0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

Find - find the first item that matches from an array.

const newNumber = numbers.find(function (num) {
  return num > 10;
})

console.log(newNumber);


0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000


FindIndex - find the index of the first item that matches.

const newNumber = numbers.findIndex(function (num) {
  return num > 10;
})

console.log(newNumber);


0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

IN FAT-ARROW format


//Map -Create a new array by doing something with each item in an array.
const newNumbers = numbers.map(x =>x * 2);

////Filter - Create a new array by keeping the items that return true.
const newNumbers1 = numbers.filter(num=> num < 10);

//Reduce - Accumulate a value by doing something to each item in an array.
var newNumber2 = numbers.reduce((accumulator, currentNumber) =>accumulator + currentNumber);

//Find - find the first item that matches from an array.
const newNumber3 = numbers.find((num) =>num > 10);

//FindIndex - find the index of the first item that matches.
const newNumber = numbers.findIndex((num)=>num > 10);


